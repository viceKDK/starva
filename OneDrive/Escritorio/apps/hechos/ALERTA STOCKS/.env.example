# =============================================================================
# PRICE MONITOR - APPLICATION CONFIGURATION
# =============================================================================
# Copy this file to .env and update the values for your environment
# Security Note: Never commit your .env file with real credentials to version control

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Server host binding (for security, only bind to localhost for personal use)
# Default: 127.0.0.1 (localhost only)
# Alternative: 0.0.0.0 (all interfaces - use with caution)
HOST=127.0.0.1

# Server port (1024-65535)
# Default: 8000
PORT=8000

# Debug mode (True for development, False for production)
# Default: True
DEBUG=True

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
# Default: INFO
# Recommended for production: WARNING
LOG_LEVEL=INFO

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# SQLite database file path (relative to project root)
# Default: data/alerts.db
# The data/ directory will be created automatically
DATABASE_PATH=data/alerts.db

# =============================================================================
# EXTERNAL API CONFIGURATION
# =============================================================================

# Alpha Vantage API Key (required for stock price monitoring)
# Get your free API key at: https://www.alphavantage.co/support/#api-key
# Security Note: Keep this key private and never share it
ALPHA_VANTAGE_API_KEY=your_alpha_vantage_key_here

# Enable CoinGecko API for cryptocurrency prices (True/False)
# Default: True (CoinGecko is free and doesn't require an API key)
COINGECKO_API_ENABLED=True

# =============================================================================
# WHATSAPP/TWILIO CONFIGURATION
# =============================================================================

# Twilio Account SID (required for WhatsApp notifications)
# Get from: https://console.twilio.com/
# Security Note: Keep this private
TWILIO_ACCOUNT_SID=your_twilio_account_sid_here

# Twilio Auth Token (required for WhatsApp notifications) 
# Get from: https://console.twilio.com/
# Security Note: Keep this private and secure
TWILIO_AUTH_TOKEN=your_twilio_auth_token_here

# Your WhatsApp number for receiving notifications
# Format: +[country code][number] (e.g., +1234567890)
# Note: For Twilio sandbox, use the sandbox number provided by Twilio
WHATSAPP_NUMBER=+1234567890

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================

# Price check interval in minutes (1-60)
# Default: 5 minutes
# Lower values = more frequent checks but higher API usage
# Higher values = less frequent checks but may miss rapid price changes
MONITORING_INTERVAL_MINUTES=5

# Alert cooldown period in hours (1-168, max 1 week)
# Default: 3 hours
# Prevents spam notifications for the same alert
# After triggering, alerts wait this long before they can trigger again
COOLDOWN_HOURS=3

# =============================================================================
# NOTIFICATION CONFIGURATION
# =============================================================================

# Enable WhatsApp notifications (True/False)
# Default: True
# Set to False to disable all WhatsApp messaging (useful for testing)
ENABLE_WHATSAPP=True

# =============================================================================
# PRODUCTION ENVIRONMENT EXAMPLE
# =============================================================================
# For production deployment, consider these settings:
# 
# HOST=127.0.0.1
# PORT=8000  
# DEBUG=False
# LOG_LEVEL=WARNING
# MONITORING_INTERVAL_MINUTES=10
# COOLDOWN_HOURS=6
# 
# Make sure to:
# 1. Use strong, unique API keys
# 2. Set DEBUG=False
# 3. Use appropriate log levels
# 4. Consider longer intervals to reduce API costs
# 5. Keep all credentials secure and private